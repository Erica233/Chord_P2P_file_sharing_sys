syntax = "proto2";

package p2pfilesharing;

message AddFileRequest{
  	required int64 filenamehash = 1;
  	required string sourcehostname = 2;
}

message LookupFileRequest{
	required int64 filenamehash = 1;
	required string sourcehostname = 2;
	required string sourceport = 3;
}

message DeleteFileRequest{
	required int64 filenamehash = 1;
	required string sourcehostname = 2;
	required string sourceport = 3;
}

message LookupFileResponse{
	required bool ifexists = 1;
	optional string ownerhostname = 2;
	optional string ownerport = 3;
}

message FileInfoRequest{
	required int64 filenamehash = 1;
	required string sourcehostname = 2;
	required string sourceport = 3;
}

message FileInfoResponse{
	required string ownerhostname = 1;
	required string ownerport = 2;
}

message DownloadRequest{
	required int64 filenamehash = 1;
	required string sourcehostname = 2;
	required string sourceport = 3;
}

message JoinRequest{
	required string sourcehostname = 1;
	required string sourceport = 2;
	required int64 hostnamehash = 3;
}

message RouteTableInit{
	repeated RouteTableEntry entry = 1;
}

message RouteTableEntry{
	required string hostname = 1;
	required string port = 2;
	required int64 hostnamehash = 3;
}

message FileTable{
	repeated FileTableEntry entry = 1;
}

message FileTableEntry{
	required int64 filenamehash = 1;
	required string ownerhostname = 2;
	required string ownerport = 3;
}

message RouteInsertRequest{
	repeated RouteTableEntry entry = 1;
}

message RouteDeleteRequest{
	repeated RouteTableEntry entry = 1;
}

message NodeRequest {
  required int64 type = 1;
  optional AddFileRequest addfile= 2;
  optional LookupFileRequest lookup = 3;
  optional DeleteFileRequest delete = 4;
  optional FileInfoRequest fileinfo = 5;
  optional DownloadRequest download = 6;
  optional JoinRequest join = 7;
  optional RouteInsertRequest insertroute = 8;
  optional RouteDeleteRequest deleteroute = 9;
}

message NodeResponse {
  required int64 type = 1;
  optional LookupFileResponse lookup = 2;
  optional FileInfoResponse fileinforsp= 3;
  optional RouteTableInit routeinit = 4;
  optional FileTable filetable = 5;
}

// message <>{
//   required int64 <> = 1;
//   repeated int32 <> = 2;
//   optional string <> = 3;
//	 repeated Err error = 4;
// }
